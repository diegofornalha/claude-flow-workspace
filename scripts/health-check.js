#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üè• Verificando sa√∫de do sistema Claude-20x...\n');

let allGood = true;
let warnings = [];

// Verificar Node.js
try {
    const nodeVersion = process.version;
    console.log(`‚úÖ Node.js: ${nodeVersion}`);
} catch (error) {
    console.log('‚ùå Node.js: N√£o detectado');
    allGood = false;
}

// Verificar npm
try {
    const npmVersion = execSync('npm -v', { encoding: 'utf8' }).trim();
    console.log(`‚úÖ npm: ${npmVersion}`);
} catch (error) {
    console.log('‚ùå npm: N√£o detectado');
    allGood = false;
}

// Verificar diret√≥rio tempor√°rio
const tempDir = process.env.TMPDIR || '/tmp';
try {
    fs.accessSync(tempDir, fs.constants.W_OK);
    console.log(`‚úÖ Diret√≥rio tempor√°rio: ${tempDir} (escrita OK)`);
} catch (error) {
    console.log(`‚ö†Ô∏è  Diret√≥rio tempor√°rio: ${tempDir} (sem permiss√£o de escrita)`);
    warnings.push('Diret√≥rio tempor√°rio pode causar problemas');
}

// Verificar processos √≥rf√£os
try {
    const orphans = execSync('ps aux | grep -E "claude.*snapshot.*zsh" | grep -v grep | wc -l', { encoding: 'utf8' }).trim();
    if (parseInt(orphans) > 0) {
        console.log(`‚ö†Ô∏è  Processos √≥rf√£os detectados: ${orphans}`);
        warnings.push(`${orphans} processos √≥rf√£os detectados - execute npm run cleanup`);
    } else {
        console.log('‚úÖ Sem processos √≥rf√£os');
    }
} catch (error) {
    // Ignorar erro se grep n√£o encontrar nada
}

// Verificar diret√≥rios essenciais
const essentialDirs = ['logging', 'projects', '.claude-flow'];
essentialDirs.forEach(dir => {
    if (fs.existsSync(dir)) {
        console.log(`‚úÖ Diret√≥rio ${dir}: OK`);
    } else {
        console.log(`‚ùå Diret√≥rio ${dir}: N√£o encontrado`);
        allGood = false;
    }
});

// Verificar arquivo claude-flow
if (fs.existsSync('claude-flow')) {
    const stats = fs.statSync('claude-flow');
    if (stats.mode & fs.constants.S_IXUSR) {
        console.log('‚úÖ claude-flow: Presente e execut√°vel');
    } else {
        console.log('‚ö†Ô∏è  claude-flow: Presente mas n√£o execut√°vel');
        warnings.push('claude-flow n√£o √© execut√°vel - execute chmod +x claude-flow');
    }
} else {
    console.log('‚ùå claude-flow: N√£o encontrado');
    allGood = false;
}

// Resultado final
console.log('\n' + '='.repeat(50));

if (warnings.length > 0) {
    console.log('\n‚ö†Ô∏è  Avisos:');
    warnings.forEach(w => console.log(`  ‚Ä¢ ${w}`));
}

if (allGood && warnings.length === 0) {
    console.log('‚úÖ Sistema completamente saud√°vel!');
    process.exit(0);
} else if (allGood) {
    console.log('‚úÖ Sistema funcional com alguns avisos.');
    process.exit(0);
} else {
    console.log('‚ùå Sistema com problemas. Execute npm run setup para corrigir.');
    process.exit(1);
}
